static const char canvas_htm[] PROGMEM = "<!DOCTYPE html><html lang='en'><head><meta charset='UTF-8'><meta name='viewport' content='width=device-width, initial-scale=1.0'><title>Document</title><style>*{margin:0;padding:0}.flipButton{width:470px;height:50px}#temperature{padding:5px;width:470px;font-size:1.8em;text-align:center}</style> <script>let startX=0;let moveX=10;const positive=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];const negative=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'];function decompress(compressed,rowLength){const parts=compressed.split('.');let output=[];let result=parts[1];let decimals=parseInt(parts[0].substring(0,1));let accuracy=parseInt(parts[0].substring(1,2));let start=parseInt(parts[0].substring(2,parts[0].length));start=start/Math.pow(10.0,decimals);output.push(start);let multiplier='';let counter=1;for(let n=0;n<result.length;n+=1){let found=false;let indexOfItem=positive.indexOf(result[n]);if(indexOfItem===-1){indexOfItem=negative.indexOf(result[n]);if(indexOfItem>=0){found=true;indexOfItem=-indexOfItem;}}else{found=true;} if(!found){multiplier+=result[n];}else{if(Math.abs(indexOfItem)>0){indexOfItem=indexOfItem*accuracy;} indexOfItem=indexOfItem/Math.pow(10,decimals);multiplier=parseInt(multiplier);if(counter>1&&counter%rowLength===0){start=output[counter-rowLength];} counter+=1;start+=indexOfItem;output.push(parseFloat(parseFloat(start).toFixed(decimals)));while(multiplier>1){if(counter>1&&counter%rowLength===0){start=output[counter-rowLength];} counter+=1;start+=indexOfItem;output.push(parseFloat(parseFloat(start).toFixed(decimals)));multiplier-=1;} multiplier='';}} return output;} function heatMapColorforValue(value,avgLowTemp,avgHighTemp){let h;let l=50;let s;let a=1;let threshold=38;let diff=avgHighTemp-avgLowTemp;if(diff<4){if(avgHighTemp<75){threshold=100-(diff*4);}else if(avgHighTemp>75){threshold=(diff*4);}} if(value<threshold){h=200+(1.0-(value/threshold))*30;l=50+(value/threshold)*30;s=60+(value/threshold)*35;a=0.8;}else{h=10+40*(1.0-((value-threshold)/threshold));l=40+50*(1.0-((value-threshold)/threshold));s=98;a=0.95;} return`hsla(${h},${s}%,${l}%,${a})`;} function percentToRGB(percent){if(percent===100){percent=99} var r,g,b;var result='';if(percent<50){r=Math.floor(255*((percent-30)/20));g=Math.floor(180*((percent)/50));b=Math.floor(255*((75-percent)/50));result='rgba('+r+','+g+','+b+', 0.9)';}else{r=255;g=Math.floor(200*((50-percent%50)/50));b=Math.floor(100*((50-percent%50)/50));result='rgba('+r+','+g+','+b+', 0.9)';} return result;} function interpolateData(input,rowLength){const output=[];let rowNum=1;for(let n=0;n<input.length;n+=1){if(n%rowLength===0){output.push((input[n]+input[n+1])/2)}else if(n>0){output.push((input[n]+input[n-1])/2)}else{output.push(input[n]);} if((n+1)%rowLength===0){if(input.length-n>rowLength){for(let r=1;r<=rowLength*2-1;r++){const roundedA=((rowNum-1)*rowLength)+Math.floor((r-1)/2);const roundedB=((rowNum-1)*rowLength)+Math.floor((r-1)/2);const topA=input[roundedA];const topB=input[roundedB];const roundedC=(rowNum*rowLength)+Math.floor((r-1)/2);const roundedD=(rowNum*rowLength)+Math.floor((r-1)/2);const bottomA=input[roundedC];const bottomB=input[roundedD];output.push((topA+topB+bottomA+bottomB)/4);} rowNum+=1;}}else{output.push((input[n]+input[n+1])/2)}} return output;} let url='ws://thermal.local:81';if(typeof ipAddress!=='undefined'){url='ws://'+ipAddress+':81';} let connection=new WebSocket(url);connection.onopen=function(){connection.send('Ping');};connection.onerror=function(error){console.log('WebSocket Error '+error);};let avgHighTemp=0;let avgLowTemp=0;let highTarget=-100;let lowTarget=200;let high=-100;let low=200;let counter=30;connection.onmessage=function(e){if(e.data.length<100){return;} const values=decompress(e.data,32);const tempValues=interpolateData(values,32);const sortedValues=values.slice().sort();avgHighTemp=0;for(let w=sortedValues.length-3;w>sortedValues.length-10;w-=1){avgHighTemp+=sortedValues[w];} avgHighTemp=avgHighTemp/7;avgLowTemp=0;for(let w=4;w<24;w+=1){avgLowTemp+=sortedValues[w];} avgLowTemp=avgLowTemp/20;if(counter>=20){let avgHighTempF=avgHighTemp*1.8+32;avgHighTempF=parseInt(avgHighTempF*10)/10;let avgLowTempF=avgLowTemp*1.8+32;avgLowTempF=parseInt(avgLowTempF*10)/10;document.getElementById('temperature').innerText='High: '+avgHighTempF+' F | Low: '+avgLowTempF+' F';highTarget=-100;lowTarget=200;for(let i=0;i<values.length;i+=1){if(values[i]<120&&values[i]>highTarget){highTarget=parseInt(values[i]);} if(values[i]<lowTarget){lowTarget=parseInt(values[i]);}} if(highTarget-lowTarget<10){highTarget+=5;} lowTarget+=1;counter=0;return;} counter+=1;if(Math.abs(low-avgLowTemp)<1.5){}else if(low===200){low=avgLowTemp;}else if(low>avgLowTemp){low-=1;}else if(low<avgLowTemp){low+=1;} if(Math.abs(high-avgHighTemp)<1.5){}else if(high===-100){high=avgHighTemp;}else if(high>avgHighTemp){high-=1;}else if(high<avgHighTemp){high+=1;} var c2=document.getElementById('myCanvas');var c2_context=c2.getContext('2d');let xPos=startX;let yPos=0;for(let i=0;i<tempValues.length;i+=1){let value=((tempValues[i]-low)/(high-low))*100;c2_context.fillStyle=heatMapColorforValue(value,low,high);c2_context.fillRect(xPos,yPos,10,10);yPos+=10;if(i>0&&(i+1)%63===0){xPos+=moveX;yPos=0;}}};function flip(){if(startX===0){startX=460;moveX=-10;}else{startX=0;moveX=10;}}</script> </head><body> <canvas id='myCanvas' width='470' height='630' style='border:1px solid #d3d3d3;'></canvas><p id='temperature'></p> <button class='flipButton' onclick='flip()'>Flip Camera</button><p id='ip'></p></body> <script>if(typeof ipAddress!=='undefined'){document.getElementById('ip').innerText='IP: '+ipAddress;}</script> </html>";
